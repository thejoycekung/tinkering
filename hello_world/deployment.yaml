apiVersion: v1
kind: Service
metadata:
  name: flask-guestbook-balance
spec:
  selector:
    app: flask-guestbook
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: flask-guestbook-service
spec:
  type: NodePort
  selector:
    app: flask-guestbook
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-guestbook-app
spec:
  selector:
    matchLabels:
      app: flask-guestbook
  template:
    metadata:
      labels:
        app: flask-guestbook
    spec:
      imagePullSecrets:
      - name: gcp-flask-json-key
      containers:
      - name: flask-guestbook-container
        image: gcr.io/instant-basis-281821/flask-hello:latest
        ports:
        - containerPort: 5000

---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "postgres-config"
  namespace: "default"
  labels:
    app: "postgres"
data:
  POSTGRES_DB: "messages_db"
  POSTGRES_USER: "joyce"
  POSTGRES_PASSWORD: "12345"

---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "postgres"
  namespace: "default"
  labels:
    app: "postgres"
spec:
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
      - name: "postgres"
        image: "postgres:12.3"
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: "postgres-config"
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: "postgres-config"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_PASSWORD"
              name: "postgres-config"
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
